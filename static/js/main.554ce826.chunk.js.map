{"version":3,"sources":["components/Common/Headings/Headings.tsx","components/Skill/SkillBar.tsx","components/Skill/Skill.tsx","components/Contact/ContactMethods.tsx","components/Contact/Contact.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Headings","headingOne","headingTwo","paragraph","className","SkillBar","name","percentage","Skill","useState","languages","map","language","ContactMethods","icon","details","join","Contact","contactDetails","information","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"uRAkBeA,EAVa,SAAC,GAAuC,IAAtCC,EAAqC,EAArCA,WAAWC,EAA0B,EAA1BA,WAAWC,EAAe,EAAfA,UAChD,OACI,gCACI,oBAAIC,UAAW,WAAf,SAA4BH,IAC5B,oBAAIG,UAAW,WAAf,SAA4BF,IAC5B,mBAAGE,UAAW,oBAAd,SAAoCD,QCajCE,G,MApBa,SAAC,GAAwB,IAAvBC,EAAsB,EAAtBA,KAAsB,EAAhBC,WAClC,OACI,sBAAKH,UAAW,oBAAhB,UACE,oBAAIA,UAAW,cAAf,SAA+BE,IAC/B,sBAAKF,UAAW,UAAhB,UACE,qBAAKA,UAAW,kBAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,QAChB,qBAAKA,UAAW,gBCVX,SAASI,IAAS,IAAD,EACTC,mBACnB,CACE,CACE,KAAO,SACP,WAAa,OAEf,CACE,KAAO,OACP,WAAa,OAEf,CACE,KAAO,MACP,WAAa,OAEf,CACE,KAAO,QACP,WAAa,OAEf,CACE,KAAO,OACP,WAAa,OAEf,CACE,KAAO,aACP,WAAa,SAxBZC,EADuB,oBA6B9B,OACE,sBAAKN,UAAW,mBAAhB,UACE,cAAC,EAAD,CAAUH,WAAY,WAAYC,WAAY,oBAAqBC,UAAW,KAC9E,qBAAKC,UAAW,YAAhB,SACGM,EAAUC,KAAI,SAACC,GAAD,OACb,cAAC,EAAD,CAAUN,KAAMM,EAASN,KAAMC,WAAYK,EAASL,qB,gBCzB/CM,EAVkB,SAAC,GAAoB,IAAnBC,EAAkB,EAAlBA,KAAMC,EAAY,EAAZA,QACrC,OACI,mCACA,qBAAKX,UAAW,cAAhB,SACI,qBAAIA,UAAW,kBAAf,UAAkC,sBAAMA,UAAW,CAACU,EAAK,iBAAiBE,KAAK,OAAQD,UC4BpFE,EA9BK,WAAO,IAAD,EACKR,mBAAoB,CAC3C,CACI,YAAc,QACd,KAAO,cACP,QAAU,gBAEd,CACI,YAAc,WACd,KAAO,iBACP,QAAU,iDAEd,CACI,YAAc,QACd,KAAO,iBACP,QAAU,wBAdXS,EADe,oBAkBtB,OACI,sBAAKd,UAAW,qBAAhB,UACI,cAAC,EAAD,CAAUH,WAAY,aAAcC,WAAY,qBAAsBC,UAAW,KAEjF,qBAAKC,UAAW,2BAAhB,SACKc,EAAeP,KAAI,SAACQ,GAAD,OAAgB,cAAC,EAAD,CAAgBL,KAAMK,EAAYL,KAAMC,QAASI,EAAYJ,mBCjBlGK,MAVf,WACE,OACE,sBAAKhB,UAAU,MAAf,UAEE,cAAC,EAAD,IACA,cAAC,EAAD,QCESiB,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCHdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.554ce826.chunk.js","sourcesContent":["import React, { FC } from 'react'\nimport \"../Headings/Headings.scss\"\n\ninterface props{\n    headingOne:string,\n    headingTwo:string,\n    paragraph:string\n}\nconst Headings: FC<props> = ({headingOne,headingTwo,paragraph}) => {\n    return (\n        <div>\n            <h2 className={\"heading1\"}>{headingOne}</h2>\n            <h1 className={\"heading2\"}>{headingTwo}</h1>\n            <p className={\"section-paragraph\"}>{paragraph}</p>\n        </div>\n    )\n}\n\nexport default Headings;\n","import React, { FC } from \"react\";\n\ninterface props{\n    name: string,\n    percentage:string\n}\nconst SkillBar: FC<props> = ({name, percentage}) => {\n  return (\n      <div className={\"battery-container\"}>\n        <h3 className={\"bar-heading\"}>{name}</h3>\n        <div className={\"battery\"}>\n          <div className={\"active-border\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n          <div className={\"bar\"}></div>\n        </div>\n      </div>\n  );\n};\n\nexport default SkillBar;\n","import React, {useState} from \"react\";\nimport Headings from \"../Common/Headings/Headings\";\nimport \"../Skill/Skill.scss\";\nimport SkillBar from \"./SkillBar\";\n\ninterface languageType{\n  name: string\n  percentage: string\n}\n\nexport default function Skill() {\n  const [languages,] = useState<languageType[]>(\n    [\n      {\n        'name':'PYTHON',\n        'percentage':'70%'\n      },\n      {\n        'name':'HTML',\n        'percentage':'30%'\n      },\n      {\n        'name':'CSS',\n        'percentage':'70%'\n      },\n      {\n        'name':'REACT',\n        'percentage':'70%'\n      },\n      {\n        'name':'JAVA',\n        'percentage':'70%'\n      },\n      {\n        'name':'JAVASCRIPT',\n        'percentage':'70%'\n      },\n    ]\n    );\n  return (\n    <div className={\"skill-background\"}>\n      <Headings headingOne={\"SERVICES\"} headingTwo={\"What I Am Good At\"} paragraph={\"\"}/>\n      <div className={\"batteries\"}>\n        {languages.map((language)=>(\n          <SkillBar name={language.name} percentage={language.percentage}/>\n        ))}\n      </div>\n    </div>\n  );\n}\n","import {FC} from 'react';\nimport 'font-awesome/css/font-awesome.min.css';\n\ninterface props{\n    icon: string,\n    details:string,\n}\n\n\nconst ContactMethods: FC<props> =({icon, details})=> {\n    return (\n        <>\n        <div className={\"contact-div\"}>\n            <h2 className={\"contact-details\"}><span className={[icon,\"contact-icons\"].join(\" \")}/>{details}</h2>\n        </div>\n        </>\n    )\n}\n\nexport default ContactMethods\n\n\n","import { FC, useState } from 'react'\nimport Headings from '../Common/Headings/Headings'\nimport '../Contact/Contact.scss'\nimport ContactMethods from './ContactMethods'\n\ninterface contact{\n    contactType:string,\n    icon: string,\n    details:string\n}\n\nconst Contact: FC = () => {\n    const [contactDetails, ] = useState<contact[]>([\n        {\n            \"contactType\":\"Phone\",\n            \"icon\":\"fa fa-phone\",\n            \"details\":\"072 759 4041\"\n        },\n        {\n            \"contactType\":\"Linkedin\",\n            \"icon\":\"fa fa-linkedin\",\n            \"details\":\"http://linkedin.com/in/jean-le-roux-43306019b\"\n        },\n        {\n            \"contactType\":\"Email\",\n            \"icon\":\"fa fa-envelope\",\n            \"details\":\"jeanlr14@gmail.com\"\n        },\n    ]);\n    return (\n        <div className={\"contact-background\"}>\n            <Headings headingOne={\"CONTACT US\"} headingTwo={\"Ways To Contact Me\"} paragraph={\"\"}/>\n        \n            <div className={\"contact-method-container\"}> \n                {contactDetails.map((information)=>(<ContactMethods icon={information.icon} details={information.details}/>))}\n                \n            </div>\n        </div>\n    )\n}\n\nexport default Contact\n","import React from 'react';\nimport logo from './logo.svg';\nimport './App.css';\nimport Intro from './components/Intro/Intro';\nimport Skill from './components/Skill/Skill';\nimport Contact from './components/Contact/Contact';\n\nfunction App() {\n  return (\n    <div className=\"App\">\n      {/* <Intro/> */}\n      <Skill/>\n      <Contact/>\n    </div>\n  );\n}\n\nexport default App;\n","import { ReportHandler } from 'web-vitals';\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals();\n"],"sourceRoot":""}